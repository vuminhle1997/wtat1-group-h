{"version":3,"sources":["components/screens/LandingPage.jsx","components/screens/RegisterPage.jsx","components/Footer.jsx","components/Header.jsx","components/screens/DashboardComponents/ReportAccordion.jsx","components/Maps.jsx","components/screens/ReportForm.jsx","components/screens/Dashboard.jsx","components/screens/ProfilePage.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","paddingTop","wrapper","padding","LandingPage","setAppState","history","useHistory","classes","useState","localStorage","getItem","email","setEmail","password","setPassword","error","setError","rememberMe","setRememberMe","useEffect","console","log","login","a","body","user","Axios","post","then","res","status","jsCookie","set","data","token","setTimeout","catch","err","Container","className","Grid","container","item","xs","FormGroup","TextField","label","variant","value","onChange","e","target","type","FormControlLabel","control","Checkbox","checked","setItem","clear","Typography","Button","color","onClick","push","range","start","end","ans","i","days","months","years","back","position","top","left","RegisterPage","navigator","geolocation","getCurrentPosition","setLat","coords","latitude","setLng","longitude","lat","lng","username","setUsername","firstname","setFirstname","lastname","setLastname","confirmPassword","setConfirmPassword","day","setDay","month","setMonth","year","setYear","gender","setGender","personalId","setPersonalId","address","setAddress","phonenumber","setPhoneNumber","success","setSuccess","registerUser","length","_day","_month","DOB","dob","role","Fab","dangerouslySetInnerHTML","__html","spacing","fullWidth","FormControl","InputLabel","Select","MenuItem","map","key","Footer","theme","flexGrow","menuButton","marginRight","title","Header","handleLogout","React","anchorEl","setAnchorEl","open","Boolean","AppBar","Toolbar","IconButton","edge","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","useStlyes","display","div","margin","ReportAccordion","report","index","ExpansionPanel","_id","ExpansionPanelSummary","expandIcon","submitter","ExpansionPanelDetails","date","details","precondition","symptoms","infected_area","person_from_infected","infected_person","styles","elementType","stylers","featureType","Maps","props","googleMapRef","createRef","createGoogleMap","window","google","maps","Map","current","zoom","center","drawCircles","state","infectedAreas","infectedCountries","area","drawInfectedAreaCircle","country","active","countryInfo","drawInfectedArea","long","fetchAreasByBounds","latBounds","lngBounds","get","min","max","forEach","temp","some","ia","setState","deleteCirclesOutOfBounds","idx","onMapChange","googleMap","addListener","getBounds","Ya","j","Ua","createMarker","sample","Marker","createCircle","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","radius","population","Math","sqrt","fetchData","COVIDAPI","results","googleMapScript","document","createElement","src","appendChild","addEventListener","this","id","ref","style","width","height","Component","overlay","background","paper","select","headline","textAlign","button","backdrop","zIndex","drawer","ReportForm","handleClose","openReportForm","setSymptoms","setPrecondition","setDetails","infectedPerson","setInfectedPerson","infectedArea","setInfectedArea","disabled","setDisabled","submitReport","config","headers","Authorization","Date","Paper","elevation","Divider","multiline","rows","rowsMax","autoWidth","addIcon","bottom","right","accordion","Dashboard","appState","isAdmin","setIsAdmin","auth","reports","setReports","offset","setOpenReportForm","retrieveReports","getGeolocation","ProfilePage","fetchProfileData","parseInt","substring","themeType","themeInstance","createMuiTheme","palette","App","setAuth","setUser","checkToken","getUserData","remove","ThemeProvider","exact","path","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a92713cb.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Container, Grid, FormGroup, TextField, FormControlLabel, Checkbox, Button, makeStyles, Typography } from '@material-ui/core'\r\nimport { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Axios from 'axios';\r\nimport jsCookie from 'js-cookie';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: '3em',\r\n    },\r\n    wrapper: {\r\n        padding: '1em 0',\r\n        \"& .MuiFormControl-root\": {\r\n            padding: '.75em 0 .5em 0'\r\n        },\r\n    }\r\n})\r\n\r\nexport default function LandingPage({setAppState}) {\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n    const [ email, setEmail ] = useState(localStorage.getItem('email') || '');\r\n    const [ password, setPassword ] = useState(localStorage.getItem('password') || '');\r\n    const [ error, setError ] = useState(false);\r\n    const [ rememberMe, setRememberMe ] = useState(localStorage.getItem('rememberMe') === \"true\" ? true : false);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log('clears landingpage');\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [error])\r\n\r\n    const storeLoginData = (e) => {\r\n        if (e.target.checked === true) {\r\n            localStorage.setItem('email', email);\r\n            localStorage.setItem('password', password);\r\n        } else {\r\n            localStorage.clear();\r\n        }\r\n\r\n        localStorage.setItem('rememberMe', e.target.checked);\r\n        setRememberMe(e.target.checked)\r\n    }\r\n\r\n    const login = async() => {\r\n        const body = {\r\n            user: {\r\n                email: email,\r\n                password: password,\r\n            },\r\n        }\r\n        await Axios.post('http://localhost:5000/api/v1.0/users/login', body)\r\n        .then(res => {\r\n            console.log(res);\r\n            if (res.status === 200) {\r\n                setError(false);\r\n                jsCookie.set('authToken', res.data.token);\r\n                setAppState(1);\r\n                setTimeout(() => {\r\n                    setAppState(2);\r\n                }, 1000)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setError(true);\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Container className={classes.root}>\r\n            <Grid container>\r\n                <Grid item xs={8}>\r\n                    <div>big image</div>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.wrapper}>\r\n                    <FormGroup>\r\n                        <div className=\"covid-logo-app\">LOGO</div>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            value={password}\r\n                            variant=\"outlined\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={rememberMe}\r\n                                    onChange={storeLoginData}\r\n                                />\r\n                            }\r\n                            label=\"Remember me\"\r\n                        />\r\n                        {\r\n                            error ? <Typography variant=\"subtitle2\">\r\n                                Your email or password is wrong. Please try again!\r\n                            </Typography>: ''\r\n                        }\r\n                        <Grid container>\r\n                            <Grid item xs={6}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={login}\r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    onClick={() => history.push('/register')}\r\n                                >\r\n                                    Register\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </FormGroup>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Container, FormGroup, TextField, Grid, FormControl, InputLabel, Select, MenuItem, Button, Typography, makeStyles, Fab } from '@material-ui/core'\r\nimport { useState } from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport jsCookie from 'js-cookie';\r\n\r\nexport function range(start, end) {\r\n    var ans = [];\r\n    for (let i = start; i <= end; i++) {\r\n        ans.push(i);\r\n    }\r\n    return ans;\r\n}\r\n\r\nexport const days = range(1, 31);\r\nexport const months = range(1, 12);\r\nexport const years = range(1970,  2020);\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        padding: '2em',\r\n    },\r\n    wrapper: {\r\n        padding: '2em',\r\n        \"& .MuiFormControl-root\": {\r\n            padding: '.75em 0 .5em 0'\r\n        },\r\n    },\r\n    back: {\r\n        position: \"fixed\",\r\n        top: '0.5em',\r\n        left: '0.5em'\r\n    }\r\n});\r\n\r\nexport default function RegisterPage({\r\n    setAppState\r\n}) {\r\n    if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            setLat(position.coords.latitude);\r\n            setLng(position.coords.longitude);\r\n        });\r\n    }\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const [ lat, setLat ] = useState(0);\r\n    const [ lng, setLng ] = useState(0);\r\n\r\n    const [ username, setUsername ] = useState('');\r\n    const [ firstname, setFirstname] = useState('');\r\n    const [ lastname, setLastname ] = useState('');\r\n    const [ email, setEmail ] = useState('');\r\n    const [ password, setPassword ] = useState('');\r\n    const [ confirmPassword, setConfirmPassword ] = useState('');\r\n    const [ day, setDay ] = useState(1);\r\n    const [ month, setMonth ] = useState(1);\r\n    const [ year, setYear ] = useState(2020);\r\n    const [ gender, setGender ] = useState('');\r\n    const [ personalId, setPersonalId ] = useState('');\r\n    const [ address, setAddress ] = useState('');\r\n    const [ phonenumber, setPhoneNumber ] = useState(null);\r\n\r\n    const [ error, setError ] = useState(false);\r\n    const [ success, setSuccess ] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [error, success]);\r\n\r\n    const registerUser = async() => {\r\n        if (password === confirmPassword && password.length > 8) {\r\n            let _day, _month;\r\n            (day >= 1 && day < 10) ? _day = `0${day}` : _day = day;\r\n            (month >= 1 && month < 10) ? _month = `0${month}`: _month = month;\r\n            const DOB = `${_day}/${_month}/${year}`;\r\n\r\n            const body = {\r\n                user: {\r\n                    username,\r\n                    password,\r\n                    firstname,\r\n                    lastname,\r\n                    gender,\r\n                    dob: DOB,\r\n                    personalId,\r\n                    email,\r\n                    address,\r\n                    phonenumber,\r\n                    latitude: lat,\r\n                    longitude: lng,\r\n                    role: \"User\"\r\n                }\r\n            }\r\n\r\n            await Axios.post(`http://localhost:5000/api/v1.0/users/create`, body)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    // redirect and store token as cookie\r\n                    jsCookie.set('authToken', res.data.token);\r\n                    setSuccess(true);\r\n                    setError(false);\r\n                    setAppState(1);\r\n                    setTimeout(() => history.push('/'), 1500);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setError(true);\r\n                setSuccess(false);\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Fab \r\n            color=\"primary\"\r\n            onClick={() => history.push('/')}\r\n            className={classes.back}\r\n        >\r\n            <div\r\n                dangerouslySetInnerHTML={\r\n                    {\r\n                        __html: '<'\r\n                    }\r\n                }\r\n            />\r\n        </Fab>\r\n        <Container className={classes.wrapper}>\r\n            <FormGroup>\r\n                <TextField\r\n                    label=\"Username *\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => setUsername(e.target.value)}\r\n                />\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            label=\"Firstname *\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            onChange={e => setFirstname(e.target.value)}\r\n                        />    \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            label=\"Lastname *\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={e => setLastname(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <TextField\r\n                    label=\"Email *\"\r\n                    type=\"email\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => setEmail(e.target.value)}\r\n                />\r\n                <TextField\r\n                    label=\"Password *\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => setPassword(e.target.value)}\r\n                />\r\n                <TextField\r\n                    label=\"Confirm password *\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => setConfirmPassword(e.target.value)}\r\n                />\r\n                <FormControl>\r\n                    <InputLabel>Gender *</InputLabel>\r\n                    <Select\r\n                        value={gender}\r\n                        variant=\"outlined\"\r\n                        onChange={e => setGender(e.target.value)}\r\n                    >\r\n                        <MenuItem value=\"Male\">Male</MenuItem>\r\n                        <MenuItem value=\"Female\">Female</MenuItem>\r\n                        <MenuItem value=\"Misc\">Not listed</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel>Birthday *</InputLabel>\r\n                    <Select\r\n                        value={day}\r\n                        variant=\"outlined\"\r\n                        onChange={e => setDay(e.target.value)}\r\n                    >\r\n                        {\r\n                            days.map(i => <MenuItem key={`day-${i}`} value={i}>{i}</MenuItem>)\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel>Birthmonth *</InputLabel>\r\n                    <Select value={month} variant=\"outlined\" onChange={e => setMonth(e.target.value)}>\r\n                        {\r\n                            months.map(i => <MenuItem key={`month-${i}`} value={i}>{i}</MenuItem>)\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel>Birthyear *</InputLabel>\r\n                    <Select value={year} variant=\"outlined\" onChange={e => setYear(e.target.value)}>\r\n                        {\r\n                            years.map(i => <MenuItem key={`year-${i}`} value={i}>{i}</MenuItem>)\r\n                        }\r\n                    </Select> \r\n                </FormControl>\r\n                <TextField\r\n                    label=\"Personal ID *\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => setPersonalId(e.target.value)}\r\n                />\r\n                <TextField\r\n                    label=\"Address\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => setAddress(e.target.value)}\r\n                />\r\n                <TextField\r\n                    label=\"Phonenumber\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => setPhoneNumber(e.target.value)}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={registerUser}\r\n                >\r\n                    Register\r\n                </Button>\r\n            </FormGroup>\r\n            {\r\n                error ? <Typography variant=\"body2\">Something went wrong</Typography> : ''\r\n            }\r\n            {\r\n                success ? <Typography variant=\"body1\">Successful registed. You will be redirected . . .</Typography>: ''\r\n            }\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AppBar, makeStyles, Toolbar, IconButton, Typography, Menu, MenuItem } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function Header({\r\n    handleLogout\r\n}) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar\r\n                position=\"static\"\r\n            >\r\n                <Toolbar>\r\n                    <IconButton \r\n                        edge=\"start\" \r\n                        className={classes.menuButton} \r\n                        color=\"inherit\" \r\n                        aria-label=\"menu\"\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        COVID-19 \r\n                    </Typography>\r\n\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"menu-appbar\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleMenu}\r\n                        color=\"inherit\"\r\n                    >\r\n                        <AccountCircle />\r\n                    </IconButton>\r\n                    <Menu\r\n                        anchorEl={anchorEl}\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                          }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem \r\n                            onClick={() => {\r\n                                history.push('/profile');\r\n                            }}\r\n                        >\r\n                            Profile\r\n                        </MenuItem>\r\n                        <MenuItem\r\n                            onClick={handleLogout}\r\n                        >\r\n                            Logout\r\n                        </MenuItem>\r\n                    </Menu>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Typography, makeStyles } from '@material-ui/core';\r\n\r\nconst useStlyes =  makeStyles({\r\n    root: {\r\n        display: 'block'\r\n    },\r\n    div: {\r\n        margin: '.5em auto'\r\n    }\r\n});\r\n\r\nexport default function ReportAccordion({report, index}) {\r\n    const classes = useStlyes();\r\n    return (\r\n        <ExpansionPanel className={classes.div} key={report._id}>\r\n            <ExpansionPanelSummary\r\n                expandIcon={\"x\"}\r\n            >\r\n                <Typography>Report of User: {`${report.submitter}`}</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails className={classes.root}>\r\n                <Typography variant=\"caption\">Submitted on: <Typography variant=\"body1\">{report.date}</Typography></Typography>\r\n                <Typography variant=\"caption\">Details: <Typography variant=\"body1\">{report.details}</Typography></Typography>\r\n                <Typography variant=\"caption\">Precondition: <Typography variant=\"body1\">{report.precondition}</Typography></Typography>\r\n                <Typography variant=\"caption\">Symptoms: <Typography variant=\"body1\">{report.symptoms}</Typography></Typography>\r\n                <Typography variant=\"caption\">From infected area:<Typography variant=\"body1\">{report.infected_area ? 'yes': 'no' }</Typography></Typography>\r\n                <Typography variant=\"caption\">Infected from a person: <Typography variant=\"body1\">{report.person_from_infected ? 'yes' : 'no'}</Typography></Typography>\r\n                <Typography variant=\"caption\">Infected: <Typography variant=\"body1\">{report.infected_person ? 'yes': 'no'}</Typography></Typography>\r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n    )\r\n}\r\n","import React, { Component, createRef } from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst styles = [\r\n    {elementType: 'geometry', stylers: [{color: '#242f3e'}]},\r\n    {elementType: 'labels.text.stroke', stylers: [{color: '#242f3e'}]},\r\n    {elementType: 'labels.text.fill', stylers: [{color: '#746855'}]},\r\n    {\r\n      featureType: 'administrative.locality',\r\n      elementType: 'labels.text.fill',\r\n      stylers: [{color: '#d59563'}]\r\n    },\r\n    {\r\n      featureType: 'poi',\r\n      elementType: 'labels.text.fill',\r\n      stylers: [{color: '#d59563'}]\r\n    },\r\n    {\r\n      featureType: 'poi.park',\r\n      elementType: 'geometry',\r\n      stylers: [{color: '#263c3f'}]\r\n    },\r\n    {\r\n      featureType: 'poi.park',\r\n      elementType: 'labels.text.fill',\r\n      stylers: [{color: '#6b9a76'}]\r\n    },\r\n    {\r\n      featureType: 'road',\r\n      elementType: 'geometry',\r\n      stylers: [{color: '#38414e'}]\r\n    },\r\n    {\r\n      featureType: 'road',\r\n      elementType: 'geometry.stroke',\r\n      stylers: [{color: '#212a37'}]\r\n    },\r\n    {\r\n      featureType: 'road',\r\n      elementType: 'labels.text.fill',\r\n      stylers: [{color: '#9ca5b3'}]\r\n    },\r\n    {\r\n      featureType: 'road.highway',\r\n      elementType: 'geometry',\r\n      stylers: [{color: '#746855'}]\r\n    },\r\n    {\r\n      featureType: 'road.highway',\r\n      elementType: 'geometry.stroke',\r\n      stylers: [{color: '#1f2835'}]\r\n    },\r\n    {\r\n      featureType: 'road.highway',\r\n      elementType: 'labels.text.fill',\r\n      stylers: [{color: '#f3d19c'}]\r\n    },\r\n    {\r\n      featureType: 'transit',\r\n      elementType: 'geometry',\r\n      stylers: [{color: '#2f3948'}]\r\n    },\r\n    {\r\n      featureType: 'transit.station',\r\n      elementType: 'labels.text.fill',\r\n      stylers: [{color: '#d59563'}]\r\n    },\r\n    {\r\n      featureType: 'water',\r\n      elementType: 'geometry',\r\n      stylers: [{color: '#17263c'}]\r\n    },\r\n    {\r\n      featureType: 'water',\r\n      elementType: 'labels.text.fill',\r\n      stylers: [{color: '#515c6d'}]\r\n    },\r\n    {\r\n      featureType: 'water',\r\n      elementType: 'labels.text.stroke',\r\n      stylers: [{color: '#17263c'}]\r\n    }\r\n];\r\n\r\nclass Maps extends Component {\r\n    googleMapRef = React.createRef()\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            googleMap: null,\r\n            infectedAreas: [],\r\n            infectedCountries: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const googleMapScript = document.createElement('script');\r\n        googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyDlcik1-nD4XiC1ryjEF6JjZO39hsrHP84`;\r\n        window.document.body.appendChild(googleMapScript);\r\n\r\n        googleMapScript.addEventListener('load',() => {\r\n            this.state.googleMap = this.createGoogleMap()\r\n            this.onMapChange();\r\n            this.fetchData();\r\n        });    \r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawCircles();\r\n    }\r\n\r\n    createGoogleMap = () => {\r\n        const { lat , lng } = this.props;\r\n        return new window.google.maps.Map(this.googleMapRef.current, {\r\n            zoom: 10,\r\n            center: {\r\n                lat: lat || 52.503325,\r\n                lng: lng || 13.426746,\r\n            },\r\n            styles: styles\r\n        });\r\n    }\r\n\r\n    drawCircles = () => {\r\n        const { infectedAreas, infectedCountries } = this.state;\r\n        if (infectedAreas.length > 0) {\r\n            infectedAreas.map(area => {\r\n                this.drawInfectedAreaCircle(area)\r\n            });\r\n        }\r\n\r\n        if (infectedCountries.length > 0) {\r\n            infectedCountries.map(country => {\r\n                const {\r\n                    active,\r\n                    countryInfo\r\n                } = country;\r\n                this.drawInfectedArea({lat: countryInfo.lat, lng: countryInfo.long}, active);\r\n            });\r\n        }\r\n    }\r\n\r\n    fetchAreasByBounds = async(latBounds, lngBounds) => {\r\n        await Axios.get(`http://localhost:5000/api/v1.0/areas?minLat=${latBounds.min}&maxLat=${latBounds.max}&minLng=${lngBounds.min}&maxLng=${lngBounds.max}`)\r\n            .then(res => {\r\n                if(res.data.length > 0) {\r\n                    console.log(res.data);\r\n                    res.data.forEach(area => {  \r\n                        let temp = [...this.state.infectedAreas];                     \r\n\r\n                        const found = temp.some(ia => ia._id === area._id);\r\n                        if (!found) temp.push(area);\r\n                        this.setState({\r\n                            infectedAreas: temp\r\n                        });\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    deleteCirclesOutOfBounds = (latBounds, lngBounds) => {\r\n        let temp = [];\r\n        this.state.infectedAreas.forEach((ia, idx) => {\r\n            if ((ia.latitude >= latBounds.min && ia.latitude <= latBounds.max) &&\r\n                (ia.longitude >= lngBounds.min && ia.longitude <= lngBounds.max)) {\r\n                    temp.push(ia);\r\n            }\r\n        });\r\n\r\n        this.setState({infectedAreas: temp});\r\n    }\r\n\r\n    onMapChange = () => {\r\n        const { googleMap } = this.state;\r\n        \r\n        // i = BreitenGrad (lat), j = Längengrad (lng)\r\n        // Y = south west, U = north east\r\n        googleMap.addListener('dragend', () => {\r\n            const latBounds = {\r\n                min: googleMap.getBounds().Ya.i,\r\n                max: googleMap.getBounds().Ya.j\r\n            }\r\n            const lngBounds = {\r\n                min: googleMap.getBounds().Ua.i,\r\n                max: googleMap.getBounds().Ua.j\r\n            }\r\n            this.deleteCirclesOutOfBounds(latBounds, lngBounds);\r\n            this.fetchAreasByBounds(latBounds, lngBounds)\r\n            // this.drawCircles();\r\n        });\r\n        googleMap.addListener('zoom_changed', () =>  {\r\n            const latBounds = {\r\n                min: googleMap.getBounds().Ya.i,\r\n                max: googleMap.getBounds().Ya.j\r\n            }\r\n            const lngBounds = {\r\n                min: googleMap.getBounds().Ua.i,\r\n                max: googleMap.getBounds().Ua.j\r\n            }\r\n            this.deleteCirclesOutOfBounds(latBounds, lngBounds);\r\n            this.fetchAreasByBounds(latBounds, lngBounds);\r\n            // this.drawCircles();\r\n        });\r\n    }\r\n        \r\n    createMarker = (sample) => {\r\n        return new window.google.maps.Marker({\r\n            position: sample,\r\n            map: this.state.googleMap,\r\n         })\r\n    }\r\n\r\n    createCircle = (area) => {\r\n        let circle =  new window.google.maps.Circle({\r\n            strokeColor: '#FF0000',\r\n            strokeOpacity: 0.4,\r\n            strokeWeight: 2,\r\n            fillColor: '#FF0000',\r\n            fillOpacity: 0.35,\r\n            map: this.state.googleMap,\r\n            center: area,\r\n            radius: 15000000 // r = 150m\r\n        }); \r\n        return circle;\r\n    }\r\n\r\n    drawInfectedArea = (area, population, country) => {\r\n        const radius = Math.sqrt(population) * 1100;\r\n        let circle =  new window.google.maps.Circle({\r\n            strokeColor: '#FF0000',\r\n            strokeOpacity: 0.05,\r\n            strokeWeight: 1,\r\n            fillColor: '#FF0000',\r\n            fillOpacity: 0.35,\r\n            map: this.state.googleMap,\r\n            center: area,\r\n            radius: radius // r = 150m\r\n        }); \r\n        return circle;\r\n    }\r\n\r\n    drawInfectedAreaCircle = (area) => {\r\n        let circle =  new window.google.maps.Circle({\r\n            strokeColor: '#FF0000',\r\n            strokeOpacity: 0.4,\r\n            strokeWeight: 2,\r\n            fillColor: '#FF0000',\r\n            fillOpacity: 0.35,\r\n            map: this.state.googleMap,\r\n            center: {\r\n                lat: area.latitude,\r\n                lng: area.longitude\r\n            },\r\n            radius: 15000 // r = 150m\r\n        }); \r\n        return circle;\r\n    }\r\n\r\n    fetchData = async() => {\r\n        let COVIDAPI = \"https://corona.lmao.ninja/v2/countries/\";\r\n        const COUNTRIES = [\"Vietnam\", \"Germany\", \"USA\", \"FR\", \"Thailand\", ];\r\n        \r\n        COUNTRIES.forEach((country) => {\r\n            COVIDAPI += country + \"%2C\";\r\n        });\r\n\r\n        await Axios.get(COVIDAPI)\r\n            .then(results => {\r\n                // console.log(results);\r\n                this.setState({infectedCountries: results.data}, () => console.log(this.state.infectedCountries));\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n\r\n        this.drawCircles();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                id=\"map\"\r\n                ref={this.googleMapRef}\r\n                style={{ width: '400px', height: '300px' }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Maps;","import React from 'react'\r\nimport { Container, Paper, Typography, makeStyles, TextField, FormControl, InputLabel, Select, Grid, MenuItem, Divider, ButtonGroup, Button, Backdrop } from '@material-ui/core'\r\nimport { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport jsCookie from 'js-cookie';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    overlay: {\r\n        background: 'rgba(50,50,50, 0.65)',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n    },\r\n    root: {\r\n        position: 'relative',\r\n        top: '1.5em',\r\n    },\r\n    paper: {\r\n        \r\n    },\r\n    select: {\r\n        width: '100%'\r\n    },\r\n    wrapper: {\r\n        width: '85%',\r\n        margin: '0 auto',\r\n        padding: '1em 0',\r\n        \"& .MuiFormControl-root\": {\r\n            padding: '1em 0 .5em 0'\r\n        }\r\n    },\r\n    headline: {\r\n        textAlign: 'center',\r\n        padding: '10px 0',\r\n    },\r\n    button: {\r\n        margin : '.75em 1em',\r\n\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default function ReportForm({handleClose, openReportForm}) {\r\n    const classes = useStyles();\r\n\r\n    const [ symptoms, setSymptoms ] = useState('');\r\n    const [ precondition, setPrecondition ] = useState('');\r\n    const [ details, setDetails ] = useState('');\r\n    const [ infectedPerson, setInfectedPerson ] = useState(false);\r\n    const [ infectedArea, setInfectedArea ] = useState(false);\r\n\r\n    const [ lat, setLat ] = useState(0);\r\n    const [ lng, setLng ] = useState(0);\r\n\r\n    const [ disabled, setDisabled ] = useState(false)\r\n\r\n    if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            setLat(position.coords.latitude)\r\n            setLng(position.coords.longitude);\r\n        });\r\n    }\r\n\r\n    const submitReport = async() => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${jsCookie.get('authToken')}`\r\n            }\r\n        }\r\n        const body = {\r\n            report: {\r\n                latitude: lat,\r\n                longitude: lng,\r\n                symptoms: symptoms,\r\n                precondition: precondition,\r\n                infected_area: infectedArea,\r\n                person_from_infected: infectedPerson,\r\n                date: new Date(),\r\n                details: details\r\n            }\r\n        }\r\n\r\n        await setDisabled(true);\r\n        await Axios.post('http://localhost:5000/api/v1.0/reports/report', body, config)\r\n        .then(res => {\r\n            console.log(res);\r\n            setTimeout(() => handleClose(), 1500);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setDisabled(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.overlay}>\r\n                <Container className={classes.root}>\r\n                    <Paper elevation={3}>\r\n                        <Typography className={classes.headline} variant=\"h4\">\r\n                            Submit report\r\n                        </Typography>\r\n                        <Divider />\r\n                        <div className={classes.wrapper}>\r\n                            <TextField\r\n                                label=\"Symptoms\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={e => setSymptoms(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                                label=\"Precondition\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={e => setPrecondition(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                                label=\"Details\"\r\n                                multiline\r\n                                rows={4}\r\n                                rowsMax={10}\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={e => setDetails(e.target.value)}\r\n                            />\r\n                            <Grid container>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel>Contacted with infected person</InputLabel>\r\n                                        <Select\r\n                                            value={infectedPerson}\r\n                                            variant=\"outlined\"\r\n                                            autoWidth={true}\r\n                                            onChange={e => setInfectedPerson(e.target.value)}\r\n                                        >\r\n                                            <MenuItem value={true}>Yes</MenuItem>\r\n                                            <MenuItem value={false}>No</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel>Came from infected area</InputLabel>\r\n                                        <Select\r\n                                            value={infectedArea}\r\n                                            variant=\"outlined\"\r\n                                            autoWidth={true}\r\n                                            onChange={e => setInfectedArea(e.target.value)}\r\n                                        >\r\n                                            <MenuItem value={true}>Yes</MenuItem>\r\n                                            <MenuItem value={false}>No</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Typography variant=\"body1\">\r\n                                The app needs to localize your current location for submitting the report. Please accept the permission, so the app can access your current geolocation.\r\n                                This is necessary, so that you aware other people, where the virus might be. The provided data will inform the user, where COVID might be located by displaying it on the map.\r\n                                You will keep friends, family and yourself safe.\r\n                            </Typography>\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                disabled={disabled}\r\n                                onClick={submitReport}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                        </div>\r\n                    </Paper>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Footer from '../Footer'\r\nimport Header from '../Header'\r\nimport Axios from 'axios'\r\nimport { useEffect, useState } from 'react';\r\nimport ReportAccordion from './DashboardComponents/ReportAccordion';\r\nimport { Container, Fab, makeStyles } from '@material-ui/core';\r\nimport Maps from '../Maps';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ReportForm from './ReportForm';\r\nimport { useHistory } from 'react-router-dom';\r\nimport jsCookie from 'js-cookie';\r\n\r\nconst useStyles = makeStyles({\r\n    addIcon: {\r\n        position: 'fixed',\r\n        bottom: '1em',\r\n        right: '1em',\r\n    },\r\n    accordion: {\r\n        margin: '.5em auto'\r\n    },\r\n})\r\n\r\n\r\nexport default function Dashboard({\r\n    appState,\r\n    handleLogout,\r\n    isAdmin,\r\n    setIsAdmin,\r\n    auth\r\n}) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [ reports, setReports ] = useState(null);\r\n    const [ offset, setOffset ] = useState(0);\r\n    const [ lat, setLat ] = useState(52.425);\r\n    const [ lng, setLng ] = useState(78.454787);\r\n\r\n    const [ openReportForm, setOpenReportForm ] = useState(null);\r\n\r\n    useEffect(() => {\r\n        retrieveReports();\r\n        getGeolocation();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [offset]);\r\n\r\n    \r\n\r\n    const getGeolocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                setLat(position.coords.latitude);\r\n                setLng(position.coords.longitude);\r\n            });\r\n        }\r\n    }\r\n\r\n    const retrieveReports = async() => {\r\n        await Axios.get('http://localhost:5000/api/v1.0/reports/')\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                console.log(res) \r\n                setReports(res.data.reports);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        setOpenReportForm(event.currentTarget);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenReportForm(null);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Header handleLogout={handleLogout}/>\r\n        {\r\n            appState === 1 ? \r\n            <div>\r\n                Loading\r\n            </div> :\r\n            <main>\r\n                <Maps \r\n                    lat={lat}\r\n                    lng={lng}\r\n                />\r\n                <Container>\r\n                    \r\n                    {\r\n                        reports.map((report, index) => {\r\n                            return <ReportAccordion key={index} report={report}/>\r\n                        })\r\n                    }\r\n\r\n                    <Fab\r\n                        className={classes.addIcon}\r\n                        color=\"secondary\"\r\n                        aria-label=\"add\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        <AddIcon />\r\n                    </Fab>\r\n                    {\r\n                        openReportForm != null ? (\r\n                            <ReportForm openReportForm={openReportForm} handleClose={handleClose} />\r\n                        ) : ''\r\n                    }\r\n                </Container>\r\n            </main>\r\n        }\r\n        <Footer />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Header from '../Header'\r\nimport Footer from '../Footer'\r\nimport { Container, FormGroup, TextField, Grid, FormControl, InputLabel, Select, MenuItem, Button, Typography } from '@material-ui/core'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport jsCookie from 'js-cookie';\r\n\r\nimport { days, months, years } from './RegisterPage';\r\n\r\nexport default function ProfilePage() {\r\n    const [ username, setUsername ] = useState('');\r\n    const [ firstname, setFirstname] = useState('');\r\n    const [ lastname, setLastname ] = useState('');\r\n    const [ email, setEmail ] = useState( '');\r\n    const [ password, setPassword ] = useState('');\r\n    const [ newPassword, setConfirmPassword ] = useState();\r\n    const [ day, setDay ] = useState();\r\n    const [ month, setMonth ] = useState();\r\n    const [ year, setYear ] = useState();\r\n    const [ gender, setGender ] = useState();\r\n    const [ personalId, setPersonalId ] = useState();\r\n    const [ address, setAddress ] = useState();\r\n    const [ phonenumber, setPhoneNumber ] = useState();\r\n    \r\n    const [ error, setError ] = useState(false);\r\n    const [ success, setSuccess ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchProfileData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [error, success, username]);\r\n\r\n    const fetchProfileData = async() => {\r\n        await Axios.get('http://localhost:5000/api/v1.0/users/profile', {\r\n            headers: {\r\n                Authorization: `Bearer ${jsCookie.get('authToken')}`\r\n            }\r\n        }).then(res => {\r\n            console.log(res);\r\n            const {\r\n                username,\r\n                firstname,\r\n                lastname,\r\n                email,\r\n                dob,\r\n                gender,\r\n                personalId,\r\n                address,\r\n                phonenumber\r\n            } = res.data;\r\n\r\n            setUsername(username);\r\n            setFirstname(firstname);\r\n            setLastname(lastname);\r\n            setEmail(email);\r\n            setDay(parseInt(dob.substring(0,2)));\r\n            setMonth(parseInt(dob.substring(3, 5)));\r\n            setYear(parseInt(dob.substring(6, dob.length + 1)));\r\n            setGender(gender);\r\n            setPersonalId(personalId);\r\n            setAddress(address);\r\n            setPhoneNumber(phonenumber);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const changePassword = async() => {\r\n        const body = {\r\n            user: {\r\n                password: password, \r\n                newPassword: newPassword\r\n            }\r\n        }\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${jsCookie.get('authToken')}`\r\n            }\r\n        }\r\n        await Axios.put('http://localhost:5000/api/v1.0/users/changePassword', body, config)\r\n        .then(res => {\r\n            console.log(res);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const changeProfileData = async() => {\r\n        let _day, _month;\r\n        (day >= 1 && day < 10) ? _day = `0${day}` : _day = day;\r\n        (month >= 1 && month < 10) ? _month = `0${month}` : _month = month;\r\n        const newDate = `${_day}/${_month}/${year}`;\r\n        const body = {\r\n            user: {\r\n                username: username,\r\n                firstname: firstname,\r\n                lastname: lastname,\r\n                email: email,\r\n                phonenumber: phonenumber,\r\n                address: address,\r\n                personalId: personalId,\r\n                dob: newDate\r\n            }\r\n        }\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${jsCookie.get('authToken')}`\r\n            }\r\n        }\r\n        await Axios.put('http://localhost:5000/api/v1.0/users/editProfile', body, config)\r\n        .then(res => {\r\n            console.log(res);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n        <main>\r\n            <Container>\r\n            <FormGroup>\r\n                <TextField\r\n                    label=\"Username *\"\r\n                    variant=\"outlined\"\r\n                    \r\n                    onChange={e => setUsername(e.target.value)}\r\n                />\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            label=\"Firstname *\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            onChange={e => setFirstname(e.target.value)}\r\n                        />    \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            label=\"Lastname *\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={e => setLastname(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <TextField\r\n                    label=\"Email *\"\r\n                    type=\"email\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => setEmail(e.target.value)}\r\n                />\r\n                <TextField\r\n                    label=\"Password *\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => setPassword(e.target.value)}\r\n                />\r\n                <TextField\r\n                    label=\"Confirm password *\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => setConfirmPassword(e.target.value)}\r\n                />\r\n                <FormControl>\r\n                    <InputLabel>Gender *</InputLabel>\r\n                    <Select\r\n                        value={gender}\r\n                        variant=\"outlined\"\r\n                        onChange={e => setGender(e.target.value)}\r\n                    >\r\n                        <MenuItem value=\"Male\">Male</MenuItem>\r\n                        <MenuItem value=\"Female\">Female</MenuItem>\r\n                        <MenuItem value=\"Misc\">Not listed</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel>Birthday *</InputLabel>\r\n                    <Select\r\n                        value={day}\r\n                        variant=\"outlined\"\r\n                        onChange={e => setDay(e.target.value)}\r\n                    >\r\n                        {\r\n                            days.map(i => <MenuItem key={`day-${i}`} value={i}>{i}</MenuItem>)\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel>Birthmonth *</InputLabel>\r\n                    <Select value={month} variant=\"outlined\" onChange={e => setMonth(e.target.value)}>\r\n                        {\r\n                            months.map(i => <MenuItem key={`month-${i}`} value={i}>{i}</MenuItem>)\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel>Birthyear *</InputLabel>\r\n                    <Select value={year} variant=\"outlined\" onChange={e => setYear(e.target.value)}>\r\n                        {\r\n                            years.map(i => <MenuItem key={`year-${i}`} value={i}>{i}</MenuItem>)\r\n                        }\r\n                    </Select> \r\n                </FormControl>\r\n                <TextField\r\n                    label=\"Personal ID *\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => setPersonalId(e.target.value)}\r\n                />\r\n                <TextField\r\n                    label=\"Address\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => setAddress(e.target.value)}\r\n                />\r\n                <TextField\r\n                    label=\"Phonenumber\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => setPhoneNumber(e.target.value)}\r\n                />\r\n            </FormGroup>\r\n            {\r\n                error ? <Typography variant=\"body2\">Something went wrong</Typography> : ''\r\n            }\r\n            {\r\n                success ? <Typography variant=\"body1\">Successful registed. You will be redirected . . .</Typography>: ''\r\n            }\r\n            </Container>\r\n        </main>\r\n        <Footer/>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch, Route } from 'react-router-dom';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport LandingPage from './components/screens/LandingPage';\r\nimport RegisterPage from './components/screens/RegisterPage';\r\nimport './App.css'\r\nimport jsCookie from 'js-cookie';\r\nimport Dashboard from './components/screens/Dashboard';\r\nimport Axios from 'axios';\r\nimport ProfilePage from './components/screens/ProfilePage';\r\n\r\nconst themeType = jsCookie.get('themeType') === 'dark' ? 'dark' : 'light' ;\r\n\r\nconst themeInstance = createMuiTheme({\r\n  palette: {\r\n    type: themeType\r\n  },\r\n  spacing: 2\r\n});\r\n\r\nfunction App() {\r\n  const [ appState, setAppState ] = useState(0);\r\n  const [ auth, setAuth ] = useState(false);\r\n  const [ isAdmin, setIsAdmin ] = useState(false);\r\n  const [ user, setUser ] = useState(null);\r\n\r\n  useEffect(() => {\r\n    checkToken();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (auth === true) getUserData();\r\n  }, [auth]);\r\n\r\n  const getUserData = async() => {\r\n    const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${jsCookie.get('authToken')}`\r\n        }\r\n    }\r\n    await Axios.get('http://localhost:5000/api/v1.0/users/profile', config)\r\n    .then(res => {\r\n      console.log(res);\r\n      if (res.data.role === 'Employee_Public_Health') setIsAdmin(true);\r\n      setUser(res.data);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\n  const checkToken = async() => {\r\n    if (jsCookie.get('authToken')) {\r\n      setAppState(1);\r\n      setTimeout(async() => {\r\n        await Axios.post('http://localhost:5000/api/v1.0/users/refresh', {}, {\r\n          headers: {\r\n            Authorization: `Bearer ${jsCookie.get('authToken')}`\r\n          }\r\n        }).then(res => {\r\n          if (res.status === 200) {\r\n            setAppState(2);\r\n            setAuth(true);\r\n            jsCookie.set('authToken', res.data.token);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      },  1500)\r\n    }\r\n  }\r\n\r\n  const handleLogout = async() => {\r\n    await jsCookie.remove('authToken');\r\n    setTimeout(() => {\r\n      setAppState(0);\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ThemeProvider theme={themeInstance}>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              {\r\n                appState === 0 ? \r\n                  <LandingPage \r\n                    setAppState={setAppState}\r\n                    setAuth={setAuth}\r\n                  /> : \r\n                  <Dashboard \r\n                    appState={appState} \r\n                    auth={auth}\r\n                    setIsAdmin={setIsAdmin}\r\n                    isAdmin={isAdmin}\r\n                    handleLogout={handleLogout}\r\n                  />\r\n              }\r\n            </Route>\r\n            <Route path=\"/profile\">\r\n              <ProfilePage user={user}/>\r\n            </Route>\r\n            <Route path=\"/register\">\r\n              <RegisterPage \r\n                setAppState={setAppState}\r\n                setAuth={setAuth}  \r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}